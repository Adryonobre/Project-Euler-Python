"""
A soma dos primos abaixo de 10 é 2 + 3 + 5 + 7 = 17.

Encontre a soma de todos os primos abaixo de dois milhões.
"""

#Aqui importamos a biblioteca que usamos para fazer testes, ela já vem com python  
Import unittest

#Criamos uma função para descobrir se o número é primo
def ePrimo(num):
   if(num == 0) or (num == 1):
       return False
   
   #Aqui verificamos se ele tem algum divisor diferente dele e de 1    
   else:
       i = num-1
       for c in range(i,i>=1,-1):
           if(num%c==0):
               return False
   return True

#Criamos a função para encontrar a soma dos números primos abaixo do número desejado
def numero_primos(numero):
    soma = 0
    
    
    #Aqui fazemos um loop até o número desejado
    for i in range(1, numero+1, 1):
        
        #Aqui verificamos se o número é primo
        if ePrimo(i):
            
            #Aqui fazemos a soma
            soma += i
            
    #Aqui retornamos a soma
    return soma

#Aqui fazemos os testes usando a biblioteca importada, utilizamos TestCase para conseguir fazer os testes, pois precisamos dos seus métodos
class test_numero_primo(unittest.TestCase):

    #Criamos a função para fazer o teste
    def test_numero_primo_menor_que_10_deve_ser_17(self):
    
        #Usamos o método para verificar se passando o valor 10 como parâmetro o resultado é igual a 17
        self.assertEqual(numero_primos(10), 17)
        
      #Criamos outro teste para confirmar
      def test_soma_numero_primo_menor_que_20_deve_dar_70(self):
      
         #Usamos o método para verificar se passando o valor 20 como parâmetro o resultado é igual a 77
         self.assertEqual(numero_primos(20), 77)
        
#Usamos esse código para exibir os testes, usamos o verbosity=2 para mostrar apenas o resultado das funções que começam com test_
unittest.main(verbosity=2)        
